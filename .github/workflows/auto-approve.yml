name: Auto-approve PRs

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  auto_approve:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Auto-approve PR
        run: |
          # Check if the current PR targets staging branches
          if [[ "${{ github.event.pull_request.base.ref }}" == "staging" ]]; then
            # Get the number of the corresponding PR to integration
            integration_pr_number=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls?head=${{ github.event.pull_request.head.sha }}&base=integration" \
              | jq -r '.[0].number')

            echo "Integration PR Number: $integration_pr_number"

            if [[ "$integration_pr_number" == "null" ]]; then
              echo "Error: Unable to fetch Integration PR Number."
              exit 1
            fi

            # Check if the corresponding PR to integration is approved
            reviews_response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/${integration_pr_number}/reviews")

            echo "Reviews Response: $reviews_response"

            approval_review_id=$(echo "$reviews_response" | jq -r '.[] | select(.user.login == "github-actions[bot]" and .state == "APPROVED") | .id')

            echo "Approval Review ID: $approval_review_id"

            if [[ "$approval_review_id" != "" ]]; then
              # If approved, auto-approve the current PR
              curl -X PUT -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }}/reviews/$approval_review_id" \
                -d '{"event": "APPROVE"}'
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
